---

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: prometheus
    component: "blackbox-exporter"
  namespace: {{ k8s_prometheus_namespace }}
  name: prometheus-blackbox-exporter
data:
  blackbox.yml: |-
    modules:
      http_2xx:
        prober: http
        timeout: 50s
        http:
          preferred_ip_protocol: ip4
      https_2xx:
        prober: http
        timeout: 50s
        http:
          method: GET
          valid_status_codes: [200]
          no_follow_redirects: false
          fail_if_ssl: false
          fail_if_not_ssl: true
          preferred_ip_protocol: ip4

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: prometheus
    component: "blackbox-exporter"
  namespace: {{ k8s_prometheus_namespace }}
  name: prometheus-blackbox-exporter

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus
    component: "blackbox-exporter"
  name: prometheus-blackbox-exporter
subjects:
  - kind: ServiceAccount
    name: prometheus-blackbox-exporter
    namespace: {{ k8s_prometheus_namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus
    component: "blackbox-exporter"
  namespace: {{ k8s_prometheus_namespace }}
  name: prometheus-blackbox-exporter
  annotations:
    prometheus.io/probe: "true"
spec:
  ports:
    - name: http
      port: 9115
      protocol: TCP
      targetPort: 9115
  selector:
    app: prometheus
    component: "blackbox-exporter"
  type: "ClusterIP"

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: prometheus
    component: "blackbox-exporter"
  namespace: {{ k8s_prometheus_namespace }}
  name: prometheus-blackbox-exporter
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
        component: blackbox-exporter
    spec:
      serviceAccountName: prometheus-blackbox-exporter
      containers:
        - name: prometheus-blackbox-exporter
          image: "{{ k8s_prometheus_blackbox_image }}:{{ k8s_prometheus_blackbox_image_tag }}"
          imagePullPolicy: "IfNotPresent"
          args:
            - --config.file=/etc/config/blackbox.yml
          ports:
            - containerPort: 9115
          readinessProbe:
            httpGet:
              path: /#/status
              port: 9115
            initialDelaySeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 10m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 32Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
        - name: prometheus-blackbox-exporter-configmap-reload
          image: "{{ k8s_prometheus_configreload_image }}:{{ k8s_prometheus_configreload_image_tag }}"
          imagePullPolicy: "IfNotPresent"
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://localhost:9115/-/reload
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-blackbox-exporter

{% if k8s_prometheus_blackbox_name != '' %}
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    prometheus.io/probe: "true"
  labels:
    app: prometheus
    component: "blackbox-exporter"
  namespace: {{ k8s_prometheus_namespace }}
  name: prometheus-blackbox-exporter
spec:
  rules:
    - host: {{ k8s_prometheus_blackbox_name }}
      http:
        paths:
          - backend:
              serviceName: prometheus-blackbox-exporter
              servicePort: 9115
  tls:
    - hosts:
      - {{ k8s_prometheus_blackbox_name }}
      secretName: tls-secret
{% endif %}
