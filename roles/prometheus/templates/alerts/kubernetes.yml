{% raw %}
    #
    # Kubernetes API server alerts
    #
    - name: kube-api-server-alerts
      rules:
      #
      # Alert that Kubernetes API server is down
      #
      - alert: K8SApiServerDown
        expr: absent(up{job="kubernetes-apiservers"} == 1)
        for: 5m
        labels:
          severity: critical
          notify: sre
        annotations:
          summary: "Kubernetes API server unreachable"
          description: "Prometheus failed to scrape API server(s), or all API servers have disappeared from service discovery"

      #
      # Alert that Kubernetes API has high latency
      #
      - alert: K8SApiServerLatency
        expr: histogram_quantile(0.99, sum(apiserver_request_latencies_bucket{subresource!="log",verb!~"^(?:CONNECT|WATCHLIST|WATCH|PROXY)$"})
          WITHOUT (instance, resource)) / 1e+06 > 1
        for: 10m
        labels:
          severity: warning
          notify: sre
        annotations:
          summary: "Kubernetes apiserver latency is high"
          description: "99th percentile Latency for {{ $labels.verb }} requests to the kube-apiserver is higher than 1s"

    #
    # Kubernetes kubelet alerts
    #
    - name: kubelet-alerts
      rules:
      #
      # Alert that Kubernetes node isn't ready to work
      #
      - alert: K8SNodeNotReady
        expr: kube_node_status_ready{condition="true"} == 0
        for: 1h
        labels:
          severity: warning
          notify: sre
        annotations:
          summary: "Node status is NotReady"
          description: "{{ $labels.kubernetes_pod_node_name }}: The Kubelet has not checked in with the API, or has set itself to NotReady, for more than an hour"

      #
      # Alert that Kubernetes few nodes aren't ready to work
      #
      - alert: K8SManyNodesNotReady
        expr: count(kube_node_status_ready{condition="true"} == 0) > 1
          and (count(kube_node_status_ready{condition="true"} == 0) / count(kube_node_status_ready{condition="true"})) > 0.2
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Many Kubernetes nodes are Not Ready"
          description: "{{ $value }} Kubernetes nodes (more than 10% are in the NotReady state)"

      #
      # Alert that kubelet is down
      #
      #- alert: K8SKubeletDown
      #  expr: count(up{job="kubelet"} == 0) / count(up{job="kubelet"}) > 0.03
      #  for: 1h
      #  labels:
      #    severity: warning
      #    notify: sre
      #  annotations:
      #    summary: "Many Kubelets cannot be scraped"
      #    description: "Prometheus failed to scrape {{ $value }}% of kubelets"

      #
      # Alert that kubelet is down
      #
      #- alert: K8SKubeletDown
      #  expr: absent(up{job="kubelet"} == 1)
      #    or count(up{job="kubelet"} == 0) / count(up{job="kubelet"}) > 0.1
      #  for: 1h
      #  labels:
      #    severity: critical
      #    notify: sre
      #  annotations:
      #    summary: "Many Kubelets cannot be scraped"
      #    description: "Prometheus failed to scrape {{ $value }}% of kubelets, or all Kubelets have disappeared from service discovery"

      #
      # Alert that kubelet can reach limit of running pods on one node
      #
      - alert: K8SKubeletTooManyPods
        expr: kubelet_running_pod_count > 100
        labels:
          severity: warning
          notify: sre
        annotations:
          summary: "Kubelet is close to pod limit"
          description: "{{$labels.kubernetes_node_name}}: Kubelet is running {{$value}} pods, close to the limit of 110"
{% endraw %}
