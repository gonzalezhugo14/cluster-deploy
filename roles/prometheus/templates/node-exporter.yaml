---
# Source: prometheus/templates/node-exporter-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: prometheus
    release: prometheus-{{ k8s_prometheus_image_tag }}
    component: "node-exporter"
  namespace: {{ k8s_prometheus_namespace }}
  name: prometheus-node-exporter
---
# Source: prometheus/templates/node-exporter-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: prometheus
    release: prometheus-{{ k8s_prometheus_image_tag }}
    component: "node-exporter"
  name: prometheus-node-exporter
subjects:
  - kind: ServiceAccount
    name: prometheus-node-exporter
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
---
# Source: prometheus/templates/node-exporter-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    release: prometheus-{{ k8s_prometheus_image_tag }}
    component: "node-exporter"
  namespace: {{ k8s_prometheus_namespace }}
  name: prometheus-node-exporter
spec:
  clusterIP: None
  ports:
    - name: metrics
      port: 9100
      protocol: TCP
      targetPort: 9100
  selector:
    app: prometheus
    component: "node-exporter"
---
# Source: prometheus/templates/node-exporter-daemonset.yaml
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: prometheus
    release: prometheus-{{ k8s_prometheus_image_tag }}
    component: "node-exporter"
  namespace: {{ k8s_prometheus_namespace }}
  name: prometheus-node-exporter
spec:
  template:
    metadata:
      labels:
        app: prometheus
        component: "node-exporter"
    spec:
      serviceAccountName: prometheus-node-exporter
      containers:
        - name: prometheus-node-exporter
          image: "{{ k8s_prometheus_nodeexport_image }}:{{ k8s_prometheus_nodeexport_image_tag }}"
          imagePullPolicy: "IfNotPresent"
          args:
            - --collector.procfs=/host/proc
            - --collector.sysfs=/host/sys
          ports:
            - name: metrics
              containerPort: 9100
              hostPort: 9100
          resources:
            {}
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly:  true
            - name: sys
              mountPath: /host/sys
              readOnly: true
      hostNetwork: true
      hostPID: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
