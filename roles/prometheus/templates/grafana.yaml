---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus
    release: prometheus-{{ k8s_prometheus_image_tag }}
    component: "grafana"
  name: prometheus-grafana
  namespace: {{ k8s_prometheus_namespace }}
spec:
  ports:
  - port: 3000
    protocol: TCP
    name: prometheus-grafana
  selector:
    app: prometheus
    component: "grafana"

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: prometheus
    release: prometheus-{{ k8s_prometheus_image_tag }}
    component: "grafana"
  name: prometheus-grafana
  namespace: {{ k8s_prometheus_namespace }}
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        alpha.istio.io/sidecar: ignore
      labels:
        app: prometheus
        release: prometheus-{{ k8s_prometheus_image_tag }}
        component: "grafana"
    spec:
      containers:
      - name: prometheus-grafana
        image: {{ k8s_prometheus_grafana_image }}:{{ k8s_prometheus_grafana_image_tag }}
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 3000
        env:
        - name: GRAFANA_PORT
          value: "3000"
        - name: GF_AUTH_BASIC_ENABLED
          value: "false"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: Admin
        - name: GF_PATHS_DATA
          value: /data/grafana
        volumeMounts:
        - mountPath: /data/grafana
          name: grafana-data
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 100Mi
      volumes:
      - name: grafana-data
        emptyDir: {}

{% if k8s_prometheus_grafana_name is defined and k8s_prometheus_grafana_name != '' %}
---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
      kubernetes.io/ingress.class: nginx
  labels:
    app: prometheus
    release: prometheus-{{ k8s_prometheus_image_tag }}
    component: "grafana"
  name: prometheus-grafana
  namespace: {{ k8s_prometheus_namespace }}
spec:
  rules:
    - host: {{ k8s_prometheus_grafana_name }}
      http:
        paths:
          - backend:
              serviceName: prometheus-grafana
              servicePort: 3000
  tls:
    - hosts:
      - {{ k8s_prometheus_grafana_name }}
      secretName: tls-secret
{% endif %}
